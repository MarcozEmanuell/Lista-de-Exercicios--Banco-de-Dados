lista de Exercícios N2 - 2025-02 - Resoluções
Questão 01
Enunciado: Deseja-se projetar a base de dados para um sistema de controle de frequência de empregados de uma organização. Com base nas informações a seguir, elabore um Diagrama Entidade-Relacionamento (DER) no nível conceitual.

Requisitos e Restrições:

O modelo não deve conter redundância de dados.

Não criar identificadores artificiais (use atributos naturais como chaves).

Não utilizar atributos multivalorados.

O modelo deve contemplar: Entidades e relacionamentos; Atributos e identificadores; Especializações/generalizações; Restrições de cardinalidade.

Descrição do domínio:

A base de dados deve armazenar informações sobre empregados.

Cada empregado é identificado por um código e possui um nome.

Para fins de controle de frequência, existem dois tipos de empregados:

Empregados com horário livre: Podem trabalhar em qualquer horário do dia. Para esses empregados, deve-se registrar a quantidade total de horas a serem trabalhadas no mês e o período mínimo de trabalho em horas por jornada.

Empregados com horário fixo: Trabalham conforme turnos predefinidos. Cada turno inicia em um dia da semana e um horário e termina em um dia da semana (possivelmente diferente) e um horário. Um empregado pode trabalhar dois turnos no mesmo dia.

Cada dia da semana é identificado por um código e possui um nome.

Resposta - Questão 01:

Abaixo está a descrição textual dos componentes do DER conceitual, seguindo todos os requisitos:

Entidades
EMPREGADO

Atributos:

código (PK - Chave Primária, Identificador)

nome

Generalização/Especialização: EMPREGADO é uma generalização (superclasse). Ela se especializa em dois tipos (especialização total e disjunta).

EMPREGADO_LIVRE (Subclasse)

Atributos: qtde_total_horas_mes, periodo_minimo_jornada.

EMPREGADO_FIXO (Subclasse)

DIA_SEMANA

Atributos:

código (PK - Chave Primária, Identificador)

nome

TURNO

Descrição: Representa um turno predefinido.

Atributos:

cod_dia_semana_inicio (PK, FK para DIA_SEMANA.código)

horario_inicio (PK)

cod_dia_semana_fim (PK, FK para DIA_SEMANA.código)

horario_fim (PK)

Nota: A chave primária (PK) é composta pelos quatro atributos para garantir a unicidade do turno, conforme a regra de não usar chaves artificiais.

Relacionamentos
trabalha_em (M:N)

Descrição: Associa empregados de horário fixo aos turnos que devem cumprir.

Entidades participantes: EMPREGADO_FIXO (0,n) e TURNO (0,n).

Cardinalidade: Muitos-para-Muitos (M:N).

inicia_em (N:1)

Descrição: Relaciona o turno ao seu dia de início. (Implícito na entidade TURNO pela FK cod_dia_semana_inicio).

Entidades participantes: TURNO (N) e DIA_SEMANA (1).

termina_em (N:1)

Descrição: Relaciona o turno ao seu dia de término. (Implícito na entidade TURNO pela FK cod_dia_semana_fim).

Entidades participantes: TURNO (N) e DIA_SEMANA (1).

Questão 02
Enunciado: A figura na Página 2 apresenta um modelo Entidade-Relacionamento (ER) parcial de um banco de dados utilizado para registrar as notas de alunos em uma disciplina específica. Com base nesse modelo conceitual, elabore o esquema lógico (modelo relacional) correspondente.

Instruções:

O modelo relacional deve refletir exatamente as informações e restrições expressas no modelo ER apresentado.

O esquema deve incluir: Nome de cada tabela; Nome dos atributos de cada tabela; Identificação da chave primária (PK); Identificação das chaves estrangeiras (FK) e suas referências.

Utilize a notação textual do esquema relacional.

Resposta - Questão 02:

Abaixo está o esquema lógico (modelo relacional) correspondente ao DER da figura.

1. aluno
   - no_cartao (PK)
   - nome

2. prova
   - no (PK)
   - data

3. questao
   - número (PK)
   - peso
   - no_prova (FK, referencia prova.no)
   
   -- Explicação: Relacionamento 1:N (prova-questao), pois uma questão
   -- está em (1,1) prova e uma prova tem (0,n) questões.
   -- A FK (no_prova) é adicionada à tabela "N" (questao).

4. nota
   - no_cartao_aluno (PK, FK, referencia aluno.no_cartao)
   - numero_questao (PK, FK, referencia questao.número)
   - nota
   
   -- Explicação: Relacionamento M:N (aluno-nota-questao), pois um aluno
   -- tem (0,n) notas e uma questão tem (0,n) notas.
   -- Gera uma nova tabela. A PK é a combinação das FKs.
Questão 03
Enunciado: Considere a tabela abaixo: Indicacao (CPF, NomeCand, (NoCartao, Ordem Preferencia, NomeOrientador)) Esta tabela foi obtida a partir de uma página WEB que lista os candidatos a um programa de pós-graduação seguidos das suas indicações de orientadores preferenciais. As dependências funcionais (podendo incluir dependências transitivas) que existem nesta tabela são as seguintes:

(CPF)→NomeCand

(NoCartao)→Nome Orientador

(CPF, NoCartao)→Ordem Preferencia

Diga em que forma normal encontra-se a tabela.

Caso a tabela não se encontre na terceira forma normal, mostre a transformação da tabela para a terceira forma normal. Mostre cada forma normal intermediária, entre aquela em que a tabela se encontra e a terceira forma normal.

Resposta - Questão 03:

1. Em que forma normal encontra-se a tabela?

Chave Primária (PK): {CPF, NoCartao} (pois juntos determinam todos os outros atributos).

1NF: A tabela está na 1NF (atributos atômicos).

2NF: A tabela não está na 2NF.

Existe uma dependência parcial: CPF → NomeCand (atributo não-chave NomeCand depende de parte da PK).

Existe outra dependência parcial: NoCartao → NomeOrientador (atributo não-chave NomeOrientador depende de parte da PK).

Resposta 1: A tabela encontra-se na 1ª Forma Normal (1NF).

2. Transformação para a Terceira Forma Normal (3FN)

A tabela viola a 2NF. Devemos decompô-la para eliminar as dependências parciais.

Forma Intermediária (2FN): Removemos as dependências parciais criando novas tabelas:

Tabela 1: Candidato (da DF1)
   - CPF (PK)
   - NomeCand

Tabela 2: Orientador (da DF2)
   - NoCartao (PK)
   - NomeOrientador

Tabela 3: Indicacao_Preferencia (restante, com DF3)
   - CPF (PK, FK referencia Candidato.CPF)
   - NoCartao (PK, FK referencia Orientador.NoCartao)
   - OrdemPreferencia
Verificação da 3FN: Agora, verificamos as tabelas da 2NF em busca de dependências transitivas.

Candidato: Nenhuma dependência transitiva. Está na 3NF.

Orientador: Nenhuma dependência transitiva. Está na 3NF.

Indicacao_Preferencia: Nenhuma dependência transitiva. Está na 3NF.

Resposta 2: O esquema final (que está na 2FN e também na 3FN) é:

Candidato (CPF (PK), NomeCand)

Orientador (NoCartao (PK), NomeOrientador)

Indicacao_Preferencia (CPF (PK, FK), NoCartao (PK, FK), OrdemPreferencia)

Questão 04
Enunciado: Considere o cenário abaixo e responda aos exercícios propostos: A imobiliário Felismina LTDA. [...] deseja implementar um sistema para gerenciar suas operações administrativas e de atendimento. A imobiliária lida com venda de imóveis urbanos ou rurais. Para qualquer imóvel se tem registradas a sua inscrição (única), localização, preço de venda e área total. Um imóvel pode possuir edificação ou não. Para um imóvel com edificação define-se a área construída, padrão da construção, se habitada ou não é destinação. Todo imóvel tem localização num endereço. A cada endereço associa-se um código de endereço (único), nome da rua, o número na rua, complemento, bairro, CEP e os telefones associados àquele endereço, se existirem. Para cada telefone coloca-se o número de ordem do telefone em relação ao endereço, prefixo e o número do telefone. Sobre imóveis rurais registra-se tipo, taxa de ITR e uma lista das melhorias presentes no imóvel. Sobre imóveis urbanos registra-se o código do loteamento, a quadra e o número de ordem na quadra. Compradores de imóveis têm nome, RG, CPF, lista de preferência de tipos de imóveis a adquirir e profissão; proprietários de imóveis têm nome, RG, CPF e estado civil e os corretores da imobiliária possuem número do CRECI, nome, RG, CPF e data de admissão na imobiliária. Uma mesma pessoa pode ser compradora, proprietária ou corretora. O RG tem valor único para cada pessoa. Toda pessoa possui um ou mais endereços e a cada endereço da pessoa associa-se um tipo de endereço. Um comprador negocia com um corretor a promessa de compra de um ou mais imóveis, onde se define entre as partes a prioridade de compra sobre aquele imóvel e a data de expiração daquela prioridade. Um proprietário pode possuir vários imóveis à venda pela imobiliária.

a) Elabore o Diagrama Entidade Relacionamento.

b) Transforme o Diagrama Entidade-Relacionamento para o Modelo Lógico (Relacional).

c) Normalize em: 1FN, 2FN e 3FN.

d) Elabore o Dicionário de dados.

Resposta - Questão 04:

a) Diagrama Entidade Relacionamento (DER)
Abaixo está a descrição textual do DER:

Entidades:

PESSOA

Atributos: RG (PK), CPF (Unique), nome.

Generalização/Especialização: Superclasse para três subclasses (especialização sobreposta: "Uma mesma pessoa pode ser..."):

COMPRADOR (Subclasse)

Atributos: profissao.

PROPRIETARIO (Subclasse)

Atributos: estado_civil.

CORRETOR (Subclasse)

Atributos: CRECI (Unique), data_admissao.

IMOVEL

Atributos: inscricao (PK), preco_venda, area_total.

Generalização/Especialização: Superclasse para dois tipos (especialização total e disjunta: "urbanos ou rurais"):

IMOVEL_URBANO (Subclasse)

Atributos: cod_loteamento, quadra, num_ordem_quadra.

IMOVEL_RURAL (Subclasse)

Atributos: tipo, taxa_ITR.

EDIFICACAO

Atributos: area_construida, padrao_construcao, habitada, destinacao.

ENDERECO

Atributos: cod_endereco (PK), rua, numero, complemento, bairro, CEP.

TELEFONE (Entidade Fraca)

Atributos: num_ordem (Chave Parcial), prefixo, numero_telefone.

Dependência: Depende de ENDERECO.

TIPO_IMOVEL (Entidade criada para normalizar a "lista de preferência")

Atributos: cod_tipo (PK), descricao_tipo.

MELHORIA (Entidade criada para normalizar a "lista das melhorias")

Atributos: cod_melhoria (PK), descricao_melhoria.

Relacionamentos:

possui_venda (1:N): PROPRIETARIO (1) --- IMOVEL (N). ("Um proprietário pode possuir vários imóveis").

possui_edificacao (1:1): IMOVEL (0,1) --- EDIFICACAO (1,1). ("Um imóvel pode possuir edificação ou não").

localiza_se_em (N:1): IMOVEL (1,1) --- ENDERECO (0,n). ("Todo imóvel tem localização num endereço").

tem_telefones (1:N): ENDERECO (1,1) --- TELEFONE (0,n) (Relacionamento Identificador, pois TELEFONE é entidade fraca).

reside_em (M:N): PESSOA (1,n) --- ENDERECO (0,n). ("Toda pessoa possui um ou mais endereços").

Atributo do Relacionamento: tipo_endereco.

negocia_promessa (Ternário M:N:N): Entre COMPRADOR, CORRETOR, IMOVEL.

Atributos do Relacionamento: prioridade_compra, data_expiracao.

prefere_tipo (M:N): COMPRADOR (0,n) --- TIPO_IMOVEL (0,n). (Modela a "lista de preferência").

possui_melhoria (M:N): IMOVEL_RURAL (0,n) --- MELHORIA (0,n). (Modela a "lista das melhorias").

b) Modelo Lógico (Relacional)
PESSOA (RG (PK), CPF (Unique), nome)
COMPRADOR (RG_pessoa (PK, FK -> PESSOA.RG), profissao)
PROPRIETARIO (RG_pessoa (PK, FK -> PESSOA.RG), estado_civil)
CORRETOR (RG_pessoa (PK, FK -> PESSOA.RG), CRECI (Unique), data_admissao)
ENDERECO (cod_endereco (PK), rua, numero, complemento, bairro, CEP)
TELEFONE (cod_endereco (PK, FK -> ENDERECO.cod_endereco), num_ordem (PK), prefixo, numero_telefone)
PESSOA_ENDERECO (RG_pessoa (PK, FK -> PESSOA.RG), cod_endereco (PK, FK -> ENDERECO.cod_endereco), tipo_endereco)
IMOVEL (inscricao (PK), preco_venda, area_total, cod_endereco (FK -> ENDERECO.cod_endereco), RG_proprietario (FK -> PROPRIETARIO.RG_pessoa), tipo_imovel (Flag 'U' ou 'R'))
IMOVEL_URBANO (inscricao_imovel (PK, FK -> IMOVEL.inscricao), cod_loteamento, quadra, num_ordem_quadra)
IMOVEL_RURAL (inscricao_imovel (PK, FK -> IMOVEL.inscricao), tipo, taxa_ITR)
EDIFICACAO (inscricao_imovel (PK, FK -> IMOVEL.inscricao), area_construida, padrao_construcao, habitada, destinacao)
TIPO_IMOVEL (cod_tipo (PK), descricao_tipo)
COMPRADOR_PREFERENCIA (RG_comprador (PK, FK -> COMPRADOR.RG_pessoa), cod_tipo (PK, FK -> TIPO_IMOVEL.cod_tipo))
MELHORIA (cod_melhoria (PK), descricao_melhoria)
IMOVEL_RURAL_MELHORIA (inscricao_imovel (PK, FK -> IMOVEL_RURAL.inscricao_imovel), cod_melhoria (PK, FK -> MELHORIA.cod_melhoria))
NEGOCIACAO (RG_comprador (PK, FK -> COMPRADOR.RG_pessoa), RG_corretor (PK, FK -> CORRETOR.RG_pessoa), inscricao_imovel (PK, FK -> IMOVEL.inscricao), prioridade_compra, data_expiracao)
c) Normalização (1FN, 2FN e 3FN)
1ª Forma Normal (1NF):

A descrição textual não está na 1NF, pois contém atributos multivalorados (listas): "telefones associados", "lista das melhorias", "lista de preferência", "um ou mais endereços".

Ação para 1NF: Esses atributos foram decompostos em novas tabelas no modelo lógico (item 'b'): TELEFONE, IMOVEL_RURAL_MELHORIA, COMPRADOR_PREFERENCIA, e PESSOA_ENDERECO.

2ª Forma Normal (2FN):

O modelo lógico (item 'b') está na 2NF. As tabelas com chaves primárias compostas (ex: TELEFONE, PESSOA_ENDERECO, NEGOCIACAO) não possuem dependências parciais (seus atributos não-chave dependem da chave composta inteira).

3ª Forma Normal (3FN):

O modelo lógico (item 'b') está na 3NF. Não há dependências transitivas (atributos não-chave dependendo de outros não-chave) com base nas regras fornecidas.

d) Dicionário de Dados
Tabela: PESSOA

RG (PK, VARCHAR(20)): Identificador único (RG) da pessoa.

CPF (Unique, VARCHAR(14)): CPF da pessoa.

nome (VARCHAR(100)): Nome da pessoa.

Tabela: COMPRADOR

RG_pessoa (PK, FK -> PESSOA.RG): Identificador da pessoa que é compradora.

profissao (VARCHAR(50)): Profissão do comprador.

Tabela: PROPRIETARIO

RG_pessoa (PK, FK -> PESSOA.RG): Identificador da pessoa que é proprietária.

estado_civil (VARCHAR(30)): Estado civil do proprietário.

Tabela: CORRETOR

RG_pessoa (PK, FK -> PESSOA.RG): Identificador da pessoa que é corretora.

CRECI (Unique, VARCHAR(20)): Número do CRECI do corretor.

data_admissao (DATE): Data de admissão do corretor.

Tabela: ENDERECO

cod_endereco (PK, INT): Código de endereço único.

rua (VARCHAR(100)): Nome da rua.

numero (VARCHAR(10)): Número na rua.

complemento (VARCHAR(50)): Complemento do endereço.

bairro (VARCHAR(50)): Bairro.

CEP (VARCHAR(9)): CEP do endereço.

Tabela: TELEFONE

cod_endereco (PK, FK -> ENDERECO.cod_endereco): Identificador do endereço.

num_ordem (PK, INT): Número de ordem do telefone.

prefixo (VARCHAR(4)): Prefixo do telefone.

numero_telefone (VARCHAR(10)): Número do telefone.

Tabela: PESSOA_ENDERECO

RG_pessoa (PK, FK -> PESSOA.RG): Identificador da pessoa.

cod_endereco (PK, FK -> ENDERECO.cod_endereco): Identificador do endereço.

tipo_endereco (VARCHAR(30)): Tipo de endereço associado à pessoa.

Tabela: IMOVEL

inscricao (PK, VARCHAR(50)): Inscrição única do imóvel.

preco_venda (DECIMAL(10,2)): Preço de venda.

area_total (DECIMAL(10,2)): Área total do imóvel.

cod_endereco (FK -> ENDERECO.cod_endereco): Endereço de localização.

RG_proprietario (FK -> PROPRIETARIO.RG_pessoa): Proprietário do imóvel.

tipo_imovel (CHAR(1E)): Flag 'U' (Urbano) ou 'R' (Rural).

Tabela: IMOVEL_URBANO

inscricao_imovel (PK, FK -> IMOVEL.inscricao): Inscrição do imóvel urbano.

cod_loteamento (VARCHAR(30)): Código do loteamento.

quadra (VARCHAR(20)): Quadra.

num_ordem_quadra (INT): Número de ordem na quadra.

Tabela: IMOVEL_RURAL

inscricao_imovel (PK, FK -> IMOVEL.inscricao): Inscrição do imóvel rural.

tipo (VARCHAR(50)): Tipo de imóvel rural.

taxa_ITR (DECIMAL(5,2)): Taxa de ITR.

Tabela: EDIFICACAO

inscricao_imovel (PK, FK -> IMOVEL.inscricao): Imóvel onde está a edificação.

area_construida (DECIMAL(10,2)): Área construída.

padrao_construcao (VARCHAR(50)): Padrão da construção.

habitada (BOOLEAN): Se está habitada ou não.

destinacao (VARCHAR(50)): Destinação da edificação.

Tabela: TIPO_IMOVEL

cod_tipo (PK, INT): Código do tipo de imóvel.

descricao_tipo (VARCHAR(100)): Descrição do tipo (para a lista de preferências).

Tabela: COMPRADOR_PREFERENCIA

RG_comprador (PK, FK -> COMPRADOR.RG_pessoa): Identificador do comprador.

cod_tipo (PK, FK -> TIPO_IMOVEL.cod_tipo): Identificador do tipo de imóvel preferido.

Tabela: MELHORIA

cod_melhoria (PK, INT): Código da melhoria.

descricao_melhoria (VARCHAR(100)): Descrição da melhoria (para a lista de melhorias).

Tabela: IMOVEL_RURAL_MELHORIA

inscricao_imovel (PK, FK -> IMOVEL_RURAL.inscricao_imovel): Imóvel rural.

cod_melhoria (PK, FK -> MELHORIA.cod_melhoria): Melhoria presente no imóvel.

Tabela: NEGOCIACAO

RG_comprador (PK, FK -> COMPRADOR.RG_pessoa): Comprador na negociação.

RG_corretor (PK, FK -> CORRETOR.RG_pessoa): Corretor na negociação.

inscricao_imovel (PK, FK -> IMOVEL.inscricao): Imóvel na negociação.

prioridade_compra (INT): Prioridade de compra.

data_expiracao (DATE): Data de expiração da prioridade.
